/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MOTORDATAVIEWBASE_HPP
#define MOTORDATAVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/motordata_screen/MotorDataPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>

class MotorDataViewBase : public touchgfx::View<MotorDataPresenter>
{
public:
    MotorDataViewBase();
    virtual ~MotorDataViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ScalableImage scalableImage2_3;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  nextButton;
    touchgfx::TextAreaWithOneWildcard motorSpd;
    touchgfx::TextAreaWithOneWildcard motorDir;
    touchgfx::Gauge gauge1;
    touchgfx::PainterRGB565Bitmap gauge1Painter;
    touchgfx::TextAreaWithOneWildcard InVoltage;
    touchgfx::TextAreaWithOneWildcard OutVoltage;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::ScalableImage scalableImage2_1;
    touchgfx::ScalableImage scalableImage2_2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MOTORSPD_SIZE = 20;
    touchgfx::Unicode::UnicodeChar motorSpdBuffer[MOTORSPD_SIZE];
    static const uint16_t MOTORDIR_SIZE = 20;
    touchgfx::Unicode::UnicodeChar motorDirBuffer[MOTORDIR_SIZE];
    static const uint16_t INVOLTAGE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar InVoltageBuffer[INVOLTAGE_SIZE];
    static const uint16_t OUTVOLTAGE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar OutVoltageBuffer[OUTVOLTAGE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MotorDataViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MOTORDATAVIEWBASE_HPP
