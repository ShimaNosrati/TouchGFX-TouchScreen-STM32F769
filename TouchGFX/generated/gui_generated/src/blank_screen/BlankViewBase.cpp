/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/blank_screen/BlankViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

BlankViewBase::BlankViewBase() :
    flexButtonCallback(this, &BlankViewBase::flexButtonCallbackHandler),
    sliderValueChangedCallback(this, &BlankViewBase::sliderValueChangedCallbackHandler),
    buttonCallback(this, &BlankViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_LARGE_NARROW_LIGHT_ID));
    scalableImage1.setPosition(0, 0, 800, 480);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    sliderVoltage.setXY(437, 216);
    sliderVoltage.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    sliderVoltage.setupHorizontalSlider(16, 11, 0, 0, 300);
    sliderVoltage.setValueRange(0, 100);
    sliderVoltage.setValue(0);
    sliderVoltage.setNewValueCallback(sliderValueChangedCallback);
    add(sliderVoltage);

    backButton.setBoxWithBorderPosition(0, 0, 77, 72);
    backButton.setBorderSize(7);
    backButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(232, 195, 9), touchgfx::Color::getColorFromRGB(51, 102, 153));
    backButton.setIconBitmaps(Bitmap(BITMAP_BACK_ID), Bitmap(BITMAP_BACK_ID));
    backButton.setIconXY(10, 10);
    backButton.setAction(flexButtonCallback);
    backButton.setPosition(28, 385, 77, 72);
    add(backButton);

    textArea3.setXY(38, 63);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setWildcard(touchgfx::TypedText(T___SINGLEUSE_O6VV).getText());
    textArea3.resizeToCurrentText();
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MAIG));
    add(textArea3);

    textArea4.setXY(38, 136);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea4.setLinespacing(0);
    textArea4.setWildcard(touchgfx::TypedText(T___SINGLEUSE_JO5W).getText());
    textArea4.resizeToCurrentText();
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V3CN));
    add(textArea4);

    textArea5.setXY(38, 208);
    textArea5.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea5.setLinespacing(0);
    textArea5.setWildcard(touchgfx::TypedText(T___SINGLEUSE_RI8Y).getText());
    textArea5.resizeToCurrentText();
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CUSX));
    add(textArea5);

    textArea5_1.setXY(36, 285);
    textArea5_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea5_1.setLinespacing(0);
    textArea5_1.setWildcard(touchgfx::TypedText(T___SINGLEUSE_OFAL).getText());
    textArea5_1.resizeToCurrentText();
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V4TA));
    add(textArea5_1);

    sliderSpeed.setXY(437, 71);
    sliderSpeed.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_LIGHT_ID));
    sliderSpeed.setupHorizontalSlider(16, 11, 0, 0, 300);
    sliderSpeed.setValueRange(0, 100);
    sliderSpeed.setValue(0);
    sliderSpeed.setNewValueCallback(sliderValueChangedCallback);
    add(sliderSpeed);

    toggleButton1.setXY(437, 135);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUNDED_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUNDED_OFF_DARK_ID));
    toggleButton1.setAction(buttonCallback);
    add(toggleButton1);
}

BlankViewBase::~BlankViewBase()
{

}

void BlankViewBase::setupScreen()
{

}

void BlankViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &backButton)
    {
        //Interaction1
        //When backButton clicked change screen to MotorData
        //Go to MotorData with screen transition towards East
        application().gotoMotorDataScreenSlideTransitionEast();
    }
}

void BlankViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderSpeed)
    {
        //Interaction2
        //When sliderSpeed value changed call virtual function
        //Call speedSliderUpdated
        speedSliderUpdated(value);
    }
    if (&src == &sliderVoltage)
    {
        //Interaction3
        //When sliderVoltage value changed call virtual function
        //Call voltageSliderUpdated
        voltageSliderUpdated(value);
    }
}

void BlankViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction4
        //When toggleButton1 clicked call virtual function
        //Call buttonPressed
        buttonPressed();
    }
}
